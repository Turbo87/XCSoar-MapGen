--- gdal.org/frmts/openjpeg/openjpegdataset.cpp	2013-02-14 21:50:46.025551805 +0100
+++ gdal/frmts/openjpeg/openjpegdataset.cpp	2013-02-15 18:07:02.513243270 +0100
@@ -1445,19 +1445,19 @@
     int bIsIrreversible =
             ! (CSLTestBoolean(CSLFetchNameValueDef(papszOptions, "REVERSIBLE", "NO")));
 
-    double dfRate = 100. / 25;
+    double dfRate = 95;
     const char* pszQuality = CSLFetchNameValueDef(papszOptions, "QUALITY", NULL);
     if (pszQuality)
     {
         double dfQuality = atof(pszQuality);
         if (dfQuality > 0 && dfQuality <= 100)
         {
-            dfRate = 100 / dfQuality;
+            dfRate = dfQuality;
         }
         else
         {
             CPLError(CE_Warning, CPLE_NotSupported,
-                 "Unsupported value for QUALITY : %s. Defaulting to 25",
+                 "Unsupported value for QUALITY : %s. Defaulting to 95",
                  pszQuality);
         }
     }
@@ -1498,17 +1498,19 @@
         parameters.csty |= 0x02;
     if (bEPH)
         parameters.csty |= 0x04;
-    parameters.cp_disto_alloc = 1;
+//    parameters.cp_disto_alloc = 1;
     parameters.tcp_numlayers = 1;
-    parameters.tcp_rates[0] = (float) dfRate;
+//    parameters.tcp_rates[0] = (float) dfRate;
+    parameters.cp_fixed_quality = 1;
+    parameters.tcp_distoratio[0] = (float) dfRate;
     parameters.cp_tx0 = 0;
     parameters.cp_ty0 = 0;
     parameters.tile_size_on = TRUE;
     parameters.cp_tdx = nBlockXSize;
     parameters.cp_tdy = nBlockYSize;
-    parameters.irreversible = bIsIrreversible;
+//    parameters.irreversible = bIsIrreversible;
     parameters.numresolution = nNumResolutions;
-    parameters.prog_order = eProgOrder;
+//    parameters.prog_order = eProgOrder;
 
     opj_image_cmptparm_t* pasBandParams =
             (opj_image_cmptparm_t*)CPLMalloc(nBands * sizeof(opj_image_cmptparm_t));
